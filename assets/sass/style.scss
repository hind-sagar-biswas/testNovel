@import "./variables";
@import "./mixins";

body {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	width: 100vw;
	height: 100vh;
	overflow: hidden;
	font-family: Arial, Helvetica, sans-serif;
	// background-image: linear-gradient(to top, #cfd9df 0%, #e2ebf0 100%);
	// background-image: linear-gradient(to top, #accbee 0%, #e7f0fd 100%);
	// background-image: linear-gradient(to top, #e6e9f0 0%, #eef1f5 100%);
	background-image: linear-gradient(-135deg, #f5f7fa 0%, #c3cfe2 100%);

	@include flex;
}

a {
	text-decoration: none;
}

.night-back{
	background-image: url('./../img/background/snow-night-city-3.jpg');
	background-repeat: no-repeat;
	background-attachment: fixed;
	background-size: cover;
}

#go-play {
	outline: none;
	padding: 40px;
	color: #c8e4ff;
	font-weight: bold;
	font-size: 2em;
	font-family: "Comic Sans MS", cursive, sans-serif;
	border-radius: 10px;
	background-image: linear-gradient( 135deg, darken(#b5d3ff, 70%) 0%, darken(#3a71ca, 70%) 100% );
	box-shadow: 1px 6px 10px darken(#1d99b3, 40%);
	transition: all ease-out 0.4s;
	
	&:hover{
		box-shadow: 5px 10px 10px darken(#1d99b3, 40%);
	}
	
	&:active{
		box-shadow: 0px 1px 10px darken(#1d99b3, 40%);
	}
}

#game-container {
	position: relative;
	margin: auto;
	padding: 0;
	width: 100%;
	max-width: 1080px;
	min-width: 480px;
	height: 100%;
	max-height: 610px;
	min-height: 360px;
	background-image: url("./../img/background/night.webp");
	background-repeat: no-repeat;
	background-size: cover;
	background-attachment: scroll;
	overflow: hidden;
	box-shadow: inset 5px -5px 10px darken($grey, 40%),
		0px 5px 10px darken($grey, 40%);

	#blurer {
		backdrop-filter: blur(2px);
		background-color: transparent;
		height: 100%;
		width: 100%;
		position: absolute;
		top: 0;
		left: 0;
	}

	#character {
		height: 100%;
		position: relative;
		padding-left: 100px;

		& img {
			height: 100%;
			max-height: 610px;
			min-height: 360px;
		}
	}

	#action-box {
		position: absolute;
		bottom: 0;
		left: 0;
		padding: 10px;
		width: calc(100% - 22px);
		height: 30%;
		background-color: rgba($color: #455d65, $alpha: 0.4);
		border: 1px solid $primary;
		backdrop-filter: blur(4px);
		color: #c8e4ff;
		overflow: hidden;

		@include flex(space-evenly, center, column);

		#dialogue-box {
			width: 100%;

			#dialogue-character-name {
				// font-weight: bold;
				color: white;
				text-shadow: rgb(186, 229, 250) 0 0 10px;
				padding: 10px 20px 10px 100px;
				margin-left: -100px;
				margin-top: 0px;
				background-color: $primary;
				border-radius: 0 50px 50px 0;
				width: max-content;
				box-shadow: 0px 5px 10px darken($grey, 40%);
			}
		}

		#option-box {
			width: 100%;
			height: 40%;

			@include flex(space-evenly);

			.option {
				padding: 10px 20px;
				color: #ffffff;
				font-weight: bolder;
				border-radius: 5px;
				cursor: pointer;
				border: 0 solid transparent;
				outline: none !important;
				border: 0;
				outline: none;
				box-shadow: 0px 5px 10px darken($grey, 40%);
				transition: all 0.3s;
				background: $primary;
				border-bottom: 4px solid darken($primary, 20%);

				&:hover {
					box-shadow: 0px 15px 25px -5px darken($grey, 40%);
					transform: scale(1.03);
				}
				&:active {
					box-shadow: 0px 4px 8px darken($grey, 30%);
					transform: scale(0.98);
				}
			}
		}
	}
}

#loading {
	position: fixed;
	width: 100vw;
	height: 100vh;
	background-image: linear-gradient(
		-135deg,
		darken(#b5d3ff, 70%) 0%,
		darken(#3a71ca, 70%) 100%
	);
	z-index: 996;
	transition: all ease-out 0.6s;

	@include flex($direction: column);

	h2 {
		font-size: 45px;
		font-weight: bold;
		background: -webkit-linear-gradient(0deg, #120e3b 0%, #65c6cc 100%);
		background: -webkit-linear-gradient(
			0deg,
			$--p-1 0%,
			$--b-2,
			$--g-3,
			$--y-1,
			$--y-4 100%
		);
		background-clip: text;
		color: transparent;
	}

	#loader {
		--cell-size: 64px;
		--cell-spacing: 1px;
		--border-width: 1px;
		--cells: 4;
		--total-size: calc(
			var(--cells) * (var(--cell-size) + 2 * var(--cell-spacing))
		);

		display: flex;
		flex-wrap: wrap;
		width: var(--total-size);
		height: var(--total-size);

		> .cell {
			--cell-color: white;
			flex: 0 0 var(--cell-size);
			margin: var(--cell-spacing);
			background-color: transparent;
			box-sizing: border-box;
			border: var(--border-width) solid var(--cell-color);

			animation: 1.5s ripple ease infinite;

			$delays: (2 * 4) - 2;
			@for $i from 1 through $delays {
				&.d-#{$i} {
					animation-delay: $i * 100ms;
				}
			}

			@for $i from 1 through length($colors) {
				&:nth-child(#{$i}) {
					--cell-color: #{nth($colors, $i)};
				}
			}
		}
	}
}

@keyframes ripple {
	0% {
		background-color: transparent;
	}

	30% {
		background-color: var(--cell-color);
	}

	60% {
		background-color: transparent;
	}

	100% {
		background-color: transparent;
	}
}
